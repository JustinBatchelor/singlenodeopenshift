---
- name: Ansible Playbook to automate deploying a sno cluster on your proxmox environment
  hosts: localhost
  vars_files:
    - vars.yml
  vars_prompt:
    - name: ansible_become_password
      prompt: "Enter your sudo password here"
      private: true
    - name: api_password
      prompt: "Enter the root password for your proxmox environment here"
      private: true
  become: true
  tasks:
    - name: Include authentication tasks
      ansible.builtin.include_tasks: preflight-checks/tasks/authenticate.yml

    - name: Task Query API for all existing clusters
      ansible.builtin.uri:
        url: https://api.openshift.com/api/assisted-install/v2/clusters
        method: GET
        body_format: json
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        status_code: 200
        return_content: true
      register: cluster_results

    - name: Task to create the query string to return the object representing the cluster if it exists
      ansible.builtin.set_fact:
        cluster_query_string: '[?name==`{{ vmname }}`]'

    - name: Task to return the object representing the cluster if it exists
      ansible.builtin.set_fact:
        cluster: '{{ cluster_results.json | community.general.json_query(cluster_query_string) }}'

    - name: Task to Query API for all existing infra-environments
      ansible.builtin.uri:
        url: https://api.openshift.com/api/assisted-install/v2/infra-envs
        method: GET
        body_format: json
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        status_code: 200
        return_content: true
      register: infra_env_results

    - name: Task to Query API for all existing infra-environments
      ansible.builtin.uri:
        url: 'https://api.openshift.com/api/assisted-install/v2/infra-envs/{{ infra_env_results.json[0].id }}'
        method: GET
        body_format: json
        headers:
          Authorization: "Bearer {{ api_token }}"
          Content-Type: "application/json"
        body:
          infra_env_id: '{{ infra_env_results.json[0].id }}'
        status_code: 200
        return_content: true
      register: infra_env

    # - name: Task to create the query string to return the object representing the infra_env if it exists
    #   ansible.builtin.set_fact:
    #     infra_env_query_string: '[?name==`{{ infraEnvironment["name"] }}`]'

    # - name: Task to return the object representing the infra_env if it exists
    #   ansible.builtin.set_fact:
    #     infra_env: '{{ infra_env_results.json | community.general.json_query(infra_env_query_string) }}'

    - debug:
        msg: '{{ cluster }}'

    - debug:
        msg: '{{ infra_env }}'
